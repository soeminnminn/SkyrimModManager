<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:local="clr-namespace:BsaBrowser.Controls">
    
    <PathGeometry x:Key="TreeArrow">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure IsFilled="True" StartPoint="0 0" IsClosed="True">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 6" />
                            <LineSegment Point="6 0" />
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                        <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898"
                  Data="{StaticResource TreeArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF1BBBFA" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="135" To="180" Duration="0:0:0.25"
                                     Storyboard.TargetName="ExpandPath"
                                     Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="180" To="135" Duration="0:0:0.25"
                                     Storyboard.TargetName="ExpandPath"
                                     Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="ExpandPath" Property="Fill" Value="#FF595959" />
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF262626" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="MouseOverBackground" Color="#EBF4FD" />
    <SolidColorBrush x:Key="MouseOverBorder" Color="#B8D6FB" />

    <SolidColorBrush x:Key="HighlightBackground" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="InactiveHighlightBackground" Color="#F6F6F6" />

    <SolidColorBrush x:Key="SelectedBackground" Color="#C1DBFC" />
    <SolidColorBrush x:Key="SelectedBorder" Color="#26A0DA" />

    <Style x:Key="TreeListBoxItemStyle" TargetType="{x:Type local:TreeListBoxItem}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="{Binding LevelPadding, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeListBoxItem}">
                    <Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <Border x:Name="Bd2" BorderThickness="1" SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                                <ContentPresenter Grid.Column="1">
                                    <ContentPresenter.InputBindings>
                                        <MouseBinding Gesture="LeftDoubleClick" Command="{Binding ToggleExpandCommand, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </ContentPresenter.InputBindings>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource MouseOverBackground}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource MouseOverBorder}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsDropTarget" Value="True">
                            <Setter TargetName="Bd2" Property="Background" Value="{StaticResource MouseOverBackground}" />
                            <Setter TargetName="Bd2" Property="BorderBrush" Value="{StaticResource MouseOverBorder}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedBackground}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource SelectedBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:TreeListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="AllowDrop" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource TreeListBoxItemStyle}"/>
    </Style>
</ResourceDictionary>